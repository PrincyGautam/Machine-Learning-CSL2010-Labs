# -*- coding: utf-8 -*-
"""B20BB051_Task 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12ENWHX_9yj9IiNr0vv5ZXubPerVPgw6H
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as pltlb
from sklearn import preprocessing
df = pd.read_csv('/content/milk.csv')
D = df.drop(df.columns[0],axis=1)
D = np.array(D)

sc = preprocessing.MinMaxScaler()
data_sc = sc.fit_transform(D)
X = pd.DataFrame(data_sc)
X = np.array(X)

from sklearn.cluster import KMeans

kmeans = KMeans(n_clusters = 5, init = "random", random_state = 2021)
y_kmeans = kmeans.fit_predict(X)

kmeans.predict(X)

pltlb.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s = 60, c = 'orange',marker='s', label = 'Cluster1')
pltlb.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s = 80, c = 'cyan',marker='*', label = 'Cluster2')
pltlb.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1], s = 70, c = 'green',marker='+', label = 'Cluster3')
pltlb.scatter(X[y_kmeans == 3, 0], X[y_kmeans == 3, 1], s = 70, c = 'violet',marker='^', label = 'Cluster4')
pltlb.scatter(X[y_kmeans == 4, 0], X[y_kmeans == 4, 1], s = 60, c = 'teal', marker='v',label = 'Cluster5') 
pltlb.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 90, c = 'black', label = 'Centroids')
pltlb.legend() 
pltlb.grid() 
pltlb.show()

kmeans_1 = KMeans(n_clusters = 3, init = "random", random_state = 2021)
y_kmeans_1 = kmeans_1.fit_predict(X)

kmeans_2 = KMeans(n_clusters = 4, init = "random", random_state = 2021)
y_kmeans_2 = kmeans_2.fit_predict(X)

print('Cluster centers: \n',kmeans.cluster_centers_)

d = [] 
for i in range(1, 6): 
    kmeans = KMeans(n_clusters = i, init = 'random', random_state = 2021)
    kmeans.fit(X) 
    d.append(kmeans.inertia_)

pltlb.plot(range(1, 6), d, marker='s',c='green')
pltlb.xlabel('Number of clusters')
pltlb.ylabel('Inertia') 
pltlb.title('Elbow method for optimal K')
pltlb.grid()
pltlb.show()

R = df[["protein","ash"]]

pltlb.scatter(R["ash"],R["protein"],marker='^', c='seagreen')
pltlb.title('Scatter plot b/w two features')
pltlb.xlabel('Protein')
pltlb.ylabel('Ash')
pltlb.grid()
pltlb.show()