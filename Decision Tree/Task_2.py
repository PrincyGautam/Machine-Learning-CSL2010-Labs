# -*- coding: utf-8 -*-
"""Task 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UyBg6HAGDNcrUp37_bV6a97sbiF2fXdP
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn import metrics
import graphviz
from sklearn import tree

df = pd.read_csv('/content/Concrete_Data.xls - Sheet1.csv')
df.head()

#FEATURES = 'Cement' , 'Blast furnace Slag', 'Fly Ash', 'Water', 'Superplasticizer', 'Coarse Aggregate', 'Fine Aggregate', 'Age'
#TARGET  = 'Concrete compressive strength

X = df.iloc[:,:-1]
Y = df.iloc[:,-1]

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.3, random_state = 2021)
(X_train.shape, X_test.shape)

model = DecisionTreeRegressor(criterion='mse', splitter='random', random_state=2021)
model.fit(X_train, Y_train)

Y_pred = model.predict(X_test)
print('Performance on training data using Decision Tree:',model.score(X_train,Y_train))
print('Performance on testing data using Decision Tree:',model.score(X_test,Y_test))

accu=metrics.r2_score(Y_test, Y_pred)
print('Accuracy |',accu)
print('MSE |',metrics.mean_squared_error(Y_test, Y_pred))
print('MAE |',metrics.mean_absolute_error(Y_test, Y_pred))

featureNames = df.columns[0:8] 
targetNames = df["Concrete compressive strength(MPa, megapascals) "].unique().tolist()
concrete_tree = tree.export_graphviz(model, feature_names=featureNames, class_names= np.unique(Y_train), filled=True, rounded=True)
graph = graphviz.Source(concrete_tree, format="png") 
graph